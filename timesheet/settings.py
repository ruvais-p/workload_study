"""
Django settings for timesheet project.

Generated by 'django-admin startproject' using Django 5.2.4.
"""

from pathlib import Path
import os

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = 'django-insecure-)c=6rh+t5zf2z0(tyg&xov-(m@8z)mz7ubzfawo_=v&z(v+1qm'

DEBUG = True

ALLOWED_HOSTS = []

# Application definition
INSTALLED_APPS = [
    'tracker',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

# Middleware - order is critical for sessions to work
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'tracker.middleware.PersistentSessionMiddleware',  # Must come before auth
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # After session
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'timesheet.urls'

AUTH_USER_MODEL = 'tracker.User'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'tracker', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'timesheet.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        'OPTIONS': {
            'timeout': 20,  # Increase timeout for SQLite
        }
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

STATIC_URL = 'static/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# =============================================
# SESSION SETTINGS - Fixed Configuration
# =============================================

# =============================================
# SESSION SETTINGS - Fixed Configuration
# =============================================

# Keep using database sessions but add more resilience
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
# Session cookie settings - make these more robust
SESSION_COOKIE_NAME = 'timesheet_sessionid'
SESSION_COOKIE_AGE = 1209600  # 2 weeks in seconds
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_SAVE_EVERY_REQUEST = True  # This helps keep sessions alive

# Security settings for session cookies
SESSION_COOKIE_SECURE = False  # Set to True in production with HTTPS
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'

# Add this to prevent session clearing on database changes
SESSION_COOKIE_DOMAIN = None  # Explicitly set to None
SESSION_COOKIE_PATH = '/'  # Make sure it's set to root
# =============================================
# CSRF SETTINGS
# =============================================

# CSRF cookie settings
CSRF_COOKIE_SECURE = False  # Set to True in production with HTTPS
CSRF_COOKIE_HTTPONLY = False  # Must be False for JavaScript access if needed
CSRF_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_AGE = 31449600  # 1 year

# =============================================
# LOGIN/LOGOUT SETTINGS
# =============================================

# Default URLs for login/logout redirects
LOGIN_URL = '/employee_signin/'  # Adjust based on your URL patterns
LOGIN_REDIRECT_URL = '/employee_dashboard/'  # Adjust based on your URL patterns
LOGOUT_REDIRECT_URL = '/employee_signin/'  # Adjust based on your URL patterns

# =============================================
# LOGGING CONFIGURATION (for debugging)
# =============================================

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'debug.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
        },
        'tracker': {  # Your app name
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'loggers': {
            'django.contrib.sessions': {
                'handlers': ['console', 'file'],
                'level': 'DEBUG',
            },
        }
    },
}

# =============================================
# CACHE CONFIGURATION (optional, for better performance)
# =============================================

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}